0. отключение файла подкачки sudo swapoff -a 
0.1. разрешение экрана xrandr -q | grep '\*'
0.2. https://losst.ru/kak-ustanovit-tar-gz-v-ubuntu УСТАНОВКА tar gz
1. изменение переключения яызка. sudo apt-get install gnome-tweak-tool
2. Установка anaconda.
	2.0. cd /tmp
	2.1. wget https://repo.anaconda.com/archive/Anaconda3-2019.07-Linux-x86_64.sh
	2.2. bash Anaconda3-2019.07-Linux-x86_64.sh
	2.3. source ~/.bashrc активация среды.
	2.4. conda list проверка правильности установки
	2.5. conda search "^python$" доступные версии
	2.6. conda create --name my_env python=3 создание виртуального окружения
	2.7. source activate my_env
	2.8. source deactivate
	2.9. conda update -n base conda
	2.10. conda update --all
3. утсановка vs code из репозитория.
	3.1. ext install MS-CEINTL.vscode-language-pack-ru.
	3.2. дебагер автоматически установиться
4. darknet.
	4.0. git clone https://github.com/pjreddie/darknet
	4.1. cd darknet
	4.2. make sudo apt-get install checkinstall
		4.2.0. sudo install make
		4.2.1. sudo apt-get install build-essential

	4.3. wget https://pjreddie.com/media/files/yolov3.weights
	4.4. cp scripts/get_coco_dataset.sh data
	4.5. cd data
	4.6. bash get_coco_dataset.sh
	4.7. modify cfg/coco.data + path to coco
	4.8. train model ./darknet detector train cfg/coco.data cfg/yolov3.cfg darknet53.conv.74
	4.9. ./darknet detector train cfg/coco.data cfg/yolov3.cfg backup/yolov3.backup if u want backups
5. Compiling With CUDA 
5.0. GPU=1
	5.1. nvidia-smi
	5.2. https://developer.nvidia.com/cuda-downloads?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1804&target_type=deblocal
6. создание файла подкачки на флеш накопителе(если требуется)
	6.0.  lsblk  просмотр всех разделов
	6.1. # dd if=/URE_DEV of=/swapfile1 bs=1024 count=524288 ТУТ у нас получается файл подкачки на 512 метров
	6.2. # chown root:root /swapfile1 
	# chmod 0600 /swapfile1 дать права
	6.3.# mkswap /swapfile1 объявление файла подкачки 
	6.4. # swapon /swapfile1 включение файла подкачки
	6.5. ( если не включился то нужно зайти в диски и включить через интерфейс)
7.Настройка git kraken для работы.
	7.0. Скачать с сайта git kraken и  установить
	7.1. установить через терминал sudo install git
	7.2. https://www.youtube.com/watch?v=5nhNfMcczlQ
8. установка wine на убунту 18.04 ((bad tutorial)Лучше PlayOnLinux)
	8.0. Откываем теминад :D
	8.1. sudo apt install wine-stable
	8.2. wine --version чекаем версию
	8.3. Откройте утилиту Программы и обновления и на вкладке Источники ПО установите галочку напротив пункта Исходный код:
	8.4. sudo apt build-dep wine-stable сборка проекта
	8.5. mkdir /opt/wine
	8.6.cd /opt/wine
	8.7.sudo wget https://dl.winehq.org/wine/source/4.0/wine-4.0-rc7.tar.xz
	8.8.sudo tar xf wine*
	8.9.cd wine-4.0-rc7
	8.10.sudo ./configure --enable-win64
	8.11.sudo ./configure --prefix /opt/wine4 --enable-win64 ( если хотим установить в другу папку, в даном случае wine4) 
	8.13.make -j4 sudo make install sudo apt-get update && sudo apt-get install checkinstall
	8.14.sudo checkinstall сборка пакеты для установки 
	8.15.dpkg -i wine.deb установка 
9. Установка polyvision монитор для linux.
	9.0. sudo apt update
	9.1. sudo apt upgrade
	9.2. sudo dpkg --add-architecture i386
	9.3. sudo apt update
	9.4. sudo apt install libqt5opengl5:i386
	9.5. sudo apt install libxrender1:i386
	9.6. chmod +x VMS.run
	9.7. sudo su
	9.8. ./VMS.run
	9.9. chmod 777 -R /opt/VMS
	9.10. mv /opt/VMS/libxcb.so.1 /opt/VMS/libxcb.so.1.old
	9.11. exit
	9.12. /opt/VMS/VMS.sh Запуск нашей камеры из терминала
10. Команда на разрешение запуска ярлыков на рабочем столе sudo chown -R ЮЗВЕРЬ:ЮЗВЕРЬ $HOME
11.0 wget -O speedtest-cli  https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py
	11.1 chmod +x speedtest-cli
	11.2 ./speedtest-cli
12.0 sublime merg
	12.1 wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -
	12.2 sudo apt-get install apt-transport-https
	12.3 echo "deb https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.list
	12.4 sudo apt-get update sudo apt-get install sublime-merge
13.0 python 3.7 default settings (bad tutorial)
	13.1 sudo apt update
	13.2 sudo apt install software-properties-common
	13.3 sudo add-apt-repository ppa:deadsnakes/ppa
	13.4 sudo apt install python3.7
	13.5 sudo nano nano ~/.bashrc
	13.6 #add new string alias python3='/usr/bin/python3.7'
	13.7 source ~/.bashrc
	13.8 python3 -V
14.0 install miniconda on raspberry pi 
	14.1 https://github.com/Archiconda/build-tools/releases
	14.2 chmod +x /path/to/yourscript.sh
	14.3 ./yourscript.sh
15.0 overlock rasbperry pi 4b
	15.1 sudo nano /boot/config.txt
	15.2 На строке ниже [pi] написать следующее
		-over_voltage=5arm_freq=1950
		или
		-over_voltage=6arm_freq=2147
		или
		-over_voltage=2arm_freq=1750
	15.3 засейвить и сделать reboot
	15.4 если не запускается - проблемы с вольтажом или не правильные настройки частот (необходимо просто взять, вытащить вашу sd карту, найти в image файле  файл settings.txt и просто переписать там же другие настройки  и запускать)
16.0 установка python нужной версии из исходного кода
	16.1 sudo apt update
	16.2 sudo apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev wget
	16.3 wget https://www.python.org/ftp/python/3.x.x/Python-3.x.x.tar.xz
	16.4 tar -xf Python-3.x.x.tar.xz
	16.5 cd Python-3.x.x./
	16.6 configure --enable-optimizations
	16.7 make -j8
	16.8 sudo make altinstall
	16.9 python3.x --version
